---

##Backup 

redis_backup_enabled:  ## eg true or false 
redis_s3_bucket:       ## eg: webengage-backup

## General
redis_version: 6.0.5
redis_source_url: http://download.redis.io/releases/redis-{{ redis_version }}.tar.gz

## Service options
redis_service_state: started
redis_service_enabled: true

# Owner
redis_user: redis
redis_group: redis

# Files & Paths
redis_bin_path: "/usr/local/bin"  # redis source will be here
redis_conf_path: "/opt/redis"  # redis configuration and running instance data will be here
redis_log_path: "/var/log/redis"
redis_pid_path: "/var/run/redis"
redis_standalone_server_conf_template_path: redis_6379.conf.j2
redis_service_template_path: redis_6379.service.j2
redis_cronjob_template_path: redis_cronjob.j2

#### redis.conf variables ####
# you can include here redis.conf's vars
# use quotation mark to avoid python value override
redis_confs:
  bind: "0.0.0.0"
  daemonize: "yes"  # mandatory for cluster node
  protected_mode: "no"
  tcp_backlog: "2048"
  timeout: 0
  tcp_keepalive: 300
  port: "6379"  # this is mandatory
  pidfile: "{{redis_pid_path}}/redis_6379.pid"
  loglevel: "notice"
  logfile: "{{ redis_log_path }}/redis_6379.log"
  supervised: "no"
  dbfilename: "dump.rdb"
  dir: "/var/lib/redis"
  maxclients: 50000
  maxmemory: "{{ (ansible_memtotal_mb*3/4)|int|abs }}mb"
  maxmemory_policy: "volatile-lru"
  stop_writes_on_bgsave_error: "no"

redis_cluster_confs:
  cluster_enabled: cluster-enabled yes
  cluster_config_file: cluster-config-file nodes.conf
  cluster_node_timeout: cluster-node-timeout 5000


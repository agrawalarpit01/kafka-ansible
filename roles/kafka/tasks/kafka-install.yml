---
- name: Creating group kafka
  group:
    name: "{{ kafka_user }}"
    state: present

- name: Creating user kafka
  user:
    name: "{{ kafka_user }}"
    group: "{{ kafka_user }}"
    state: present
  become: true

#- name: install xfs utilities
#  yum:
#    name: ["cloud-utils-growpart", "gdisk"]
#    state: latest
#  tags:
#    - mount_vol

#- name: "create mount path"
#  file:
#    state: "directory"
#    path: "{{ item }}"
#    mode: 0755
#    owner: "{{ kafka_user }}"
#    group: "{{ kafka_user }}"
#  with_items:
#    - "/vol"
#    - "/vol/kafka"

#- name: "mount the partition"
#  mount:
#    path: "{{ item.path }}"
#    src: "{{ item.src }}"
#    fstype: "xfs"
#    state: "mounted"
#  with_items:
#    - "{{ mount_path }}"

- name: "Install Java"
  yum:
    name: java-1.8.0-openjdk
    state: present

- name: Create kafka required directory
  file:
    path: "{{ item.dir }}"
    state: directory
    mode: "{{ item.mode }}"
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
  with_items:
    - "{{ kafka_dir }}"
  tags:
    - kafka_install

#- name: Downloading official kafka release
#  get_url:
#    url: "{{ kafka_url_src }}"
#    dest: "{{  kafka_url_dest }}"
#    mode: 0755
#  tags:
#    - kafka_install

- name: Unzip downloaded file
  unarchive:
    src: "{{ kafka_url_src }}"
    dest: "{{ kafka_download_dir }}"
    remote_src: yes
  #   owner: "{{ kafka_user }}"
  #   group: "{{ kafka_user }}"
  #   creates: "/opt/kafka"
  tags:
    - kafka_install

- name: link kafka download dir
  file:
    src: /opt/kafka_*
    dest: /opt/kafka
    owner: "{{ kafka_user }}"
    group: "{{ kafka_user }}"
    state: link

- name: move files to the destination
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
  with_items:
    - "{{ file_transfer }}"

#- name: Check if broker.id is already defined
#  lineinfile:
#    state: absent
#    path: "/opt/kafka/config/server.properties"
#    regexp: "^broker.id="
#  check_mode: true
#  changed_when: false # This just makes things look prettier in the logs
#  register: check

#- name: Define broker.id if undefined
#  lineinfile:
#    state: present
#    path: "/opt/kafka/config/server.properties"
#    line: "{{ broker-id }}"
#  when: check.found == 0

#- name: Check if zookeeper connect is already defined
#  lineinfile:
#    state: absent
#    path: "/opt/kafka/config/server.properties"
#    regexp: "^zookeeper.connect="
#  check_mode: true
#  changed_when: false # This just makes things look prettier in the logs
#  register: check

#- name: Define zookeeper.connect if undefined
#  lineinfile:
#    state: present
#    path: "/opt/kafka/config/server.properties"
#    line: "{{ zookeeper-connect }}"
#  when: check.found == 0

- name: Update kafka server property
  template:
    src: server.properties.j2
    dest: /opt/kafka/config/server.properties
    mode: 0644
    owner: "{{ kafka_user }}"
    group: "{{ kafka_user }}"

- name: start kafka service
  service:
    name: kafka
    state: started
